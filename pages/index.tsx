import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import cache from '../src/utils/DB/cache'

import styles from '../styles/Home.module.css'


interface IProps {
  coupon: string | null
}

interface IPPPData {
  ppp: {
    pppConversionFactor: number
  }
}



export default function Home({coupon}: IProps){

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        {coupon ? (
          <h1>Your coupon is {coupon}</h1>
        ): (
          <h1>Sorry ......not seeeing one</h1>
        )}
      </div>


      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}



export const getServerSideProps: GetServerSideProps = async () => {
  const country = 'CO';

  //const va = 'false';
 // const url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=${va}`;

  const fetcher = async () => {
    const url = `https://api.purchasing-power-parity.com/?target=${country}`;
    const response = await fetch(url);
    const data: IPPPData = await response.json();
  console.log('nowwww')
    let coupon: string | null = null;
  if(data.ppp.pppConversionFactor < 0.25) {
    coupon = "PPP75";
  } else if (data.ppp.pppConversionFactor < 0.5) {
    coupon = "ppp50";
  } else if (data.ppp.pppConversionFactor < 0.75) {
    coupon = "ppp25";
  }

  return coupon;
  }

 //persisting data in redis, data is cached here to avoid querying upon all requests
 const cachedCoupon = await cache.fetch(`ppp:${country}`, fetcher, 30)
 //console.log(cachedCoupon)

  return {props:{
    coupon: cachedCoupon
  }};
};